"""Initial migration

Revision ID: 001_initial
Revises:
Create Date: 2024-07-26 16:42:00.000000

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "001_initial"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "Category",
        sa.Column("category_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("icon_url", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("category_id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "Tag",
        sa.Column("tag_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("tag_id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "User",
        sa.Column("user_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("password_hash", sa.String(), nullable=False),
        sa.Column("avatar_url", sa.String(), nullable=True),
        sa.Column("role", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("user_id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "attractions",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("address", sa.String(), nullable=True),
        sa.Column("province", sa.String(), nullable=True),
        sa.Column("district", sa.String(), nullable=True),
        sa.Column("latitude", sa.Float(), nullable=True),
        sa.Column("longitude", sa.Float(), nullable=True),
        sa.Column("category_id", sa.Integer(), nullable=True),
        sa.Column("opening_hours", sa.String(), nullable=True),
        sa.Column("entrance_fee", sa.String(), nullable=True),
        sa.Column("contact_phone", sa.String(), nullable=True),
        sa.Column("website", sa.String(), nullable=True),
        sa.Column("main_image_url", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["Category.category_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "Favorite",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("attraction_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["attraction_id"],
            ["attractions.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["User.user_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "attraction_id", name="_user_attraction_uc"),
    )
    op.create_table(
        "Image",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("attraction_id", sa.Integer(), nullable=False),
        sa.Column("image_url", sa.String(), nullable=False),
        sa.Column("caption", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["attraction_id"],
            ["attractions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "Review",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("attraction_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("rating", sa.Integer(), nullable=False),
        sa.Column("comment", sa.Text(), nullable=True),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["attraction_id"],
            ["attractions.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["User.user_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "attraction_tags",
        sa.Column("attraction_id", sa.Integer(), nullable=False),
        sa.Column("tag_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["attraction_id"],
            ["attractions.id"],
        ),
        sa.ForeignKeyConstraint(
            ["tag_id"],
            ["Tag.tag_id"],
        ),
        sa.PrimaryKeyConstraint("attraction_id", "tag_id"),
        sa.UniqueConstraint("attraction_id", "tag_id", name="_attraction_tag_uc"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("attraction_tags")
    op.drop_table("Review")
    op.drop_table("Image")
    op.drop_table("Favorite")
    op.drop_table("attractions")
    op.drop_table("User")
    op.drop_table("Tag")
    op.drop_table("Category")
    # ### end Alembic commands ###
